//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.10

use sea_orm::entity::prelude::*;
use serde::Serialize;
use crate::todo::entity::prelude::Todos;

#[derive(Clone, Debug, Default, PartialEq, DeriveEntityModel, Eq, Serialize)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub full_name: String,
    pub password: String,
    pub email: String,
    pub created_on: Option<DateTime>,
    pub updated_on: Option<DateTime>,
    pub deleted_on: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "Todos")]
    Todos
}

impl Related<Todos> for Entity {
    fn to() -> RelationDef {
        Relation::Todos.def()
    }
}
impl ActiveModelBehavior for ActiveModel {}
